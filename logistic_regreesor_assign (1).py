# -*- coding: utf-8 -*-
"""logistic_regreesor_assign.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1AQ-FBU4t5mPeeQ6whED_tsVWu126xQp7
"""

# prompt: hey colab uplouad  data file

from google.colab import files

uploaded = files.upload()

for fn in uploaded.keys():
  print('User uploaded file "{name}" with length {length} bytes'.format(
      name=fn, length=len(uploaded[fn])))

import pandas as pd
df=pd.read_csv("Titanic_train.csv")
df.head()

df

df.dropna(inplace=True)

df.drop(columns=['Name','Ticket'],inplace=True,axis=1)

df.dropna(inplace=True)

df.describe()



df.info()

X=df.drop("PassengerId",axis=1)
Y=df['PassengerId']

# prompt: above data best visualtion each clomn wise for scatter plot and histofram

import matplotlib.pyplot as plt

for col in df.columns:
  plt.figure()
  plt.scatter(df.index, df[col])
  plt.title(f"Scatter plot for {col}")
  plt.show()

  plt.figure()
  df[col].hist()
  plt.title(f"Histogram for {col}")
  plt.show()

from sklearn.preprocessing import LabelEncoder
LE=LabelEncoder()

for col in df.select_dtypes(include='object').columns:
    df[col] = LE.fit_transform(df[col])

df

print(type(x))

x = x.to_numpy()

x.columns = x.columns.astype(str)

df.dropna(inplace=True)

df.dropna(inplace=True)
x = df.iloc[:, 0:-1]
y = df.iloc[:, -1]
logreg = LogisticRegression()
logreg.fit(x, y)

# Data partition
from sklearn.model_selection import train_test_split
X_train,X_test,Y_train,Y_test = train_test_split(X,Y, test_size=0.30)
print(X_train.shape)
print(X_test.shape)
print(Y_train.shape)
print(Y_test.shape)

# model fitting
logreg.fit(X_train,Y_train)
Y_pred_train = logreg.predict(X_train)
Y_pred_test = logreg.predict(X_test)

from sklearn.metrics import accuracy_score
ac1 = accuracy_score(Y_train,Y_pred_train)
ac2 = accuracy_score(Y_test,Y_pred_test)
print("Training Accuracy score: ", ac1.round(2))
print("Testing Accuracy score: ", ac2.round(2))

# cross validation method
from sklearn.linear_model import LogisticRegression
logreg = LogisticRegression()
from sklearn.model_selection import train_test_split

training_accuracy = []
test_accuracy = []
for i in range(1,101):
    X_train,X_test,Y_train,Y_test = train_test_split(X,Y, test_size=0.30,random_state=i)
    logreg.fit(X_train,Y_train)
    Y_pred_train = logreg.predict(X_train)
    Y_pred_test = logreg.predict(X_test)
    training_accuracy.append(accuracy_score(Y_train,Y_pred_train))
    test_accuracy.append(accuracy_score(Y_test,Y_pred_test))

print("Cross validation Training score: ", np.mean(training_accuracy).round(2))
print("Cross validation Test score: ", np.mean(test_accuracy).round(2))

